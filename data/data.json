{
  "items": [
    {
      "title": "Switter",
      "github": "https://github.com/jwzzang12/switter",
      "website": "https://jwzzang12.github.io/switter/",
      "image": "./images/switter.jpeg",
      "desc": "Enabled users to post text and images while providing a familiar social media experience • Implemented profile name customization and seamless sign-in/sign-up options via Google, GitHub, and email authentication • Leveraged Firebase as the backend, utilizing its authentication, cloud storage, and database services for efficient and secure data management",
      "stack": "React | Firebase | Sass"
    },
    {
      "title": "Toucan Coffee Shop",
      "github": "https://github.com/chingu-voyages/v41-toucans-team-04",
      "website": "https://development--toucan-coffee.netlify.app",
      "image": "./images/coffee.jpeg",
      "desc": "Utilized React.js to build the Menu page and implement a user-friendly Cart hamburger menu • Elevated team members’ knowledge with prior React experience • Practiced Agile by engaging in weekly team meetings, tracking progress on Trello",
      "stack": "React | Router | Github"
    },
    {
      "title": "Translator",
      "github": "https://github.com/jwzzang12/paqago-react",
      "website": "https://moonjiwon-translator.netlify.app",
      "image": "./images/translator.jpeg",
      "desc": "Created a server using Node.js and deployed it using fly.io, providing a backend for a translation function • Used Naver Papago API to enable translation functionality, allowing users to translate content in real-time • Utilized Axios to send content to the translation server and retrieve the translated results",
      "stack": "React | Node.js | Fly.io | Sass"
    },
    {
      "title": "TMDB Web Site",
      "github": "https://github.com/jwzzang12/tmdb-clone",
      "website": "https://moonjiwon-tmdb-clone.netlify.app",
      "image": "./images/tmdb.jpeg",
      "desc": "Used TMDB’s API and React Router to create an interactive website providing comprehensive information about movies, TV shows • Implemented search functionality allowing users to search for movies or TV series based on title • Created detailed pages for each search result, presenting in-depth information including ratings, plot summaries, and cast details",
      "stack": "React | Router | Axios | Sass"
    },
    {
      "title": "Todo-Tada",
      "github": "https://github.com/jwzzang12/todo-tada",
      "website": "https://moonjiwon-todo-tada.netlify.app",
      "image": "./images/todo.jpeg",
      "desc": "Simple task app built with React, Redux • Intuitive UX design like adding tasks with “+” button or enter key, exiting task edit by clicking outside the edit window)",
      "stack": "React | Redux | Sass"
    },
    {
      "title": "The Weather App",
      "github": "https://github.com/jwzzang12/weather-app/tree/moon",
      "website": "https://moonjiwon-weather-app.netlify.app/",
      "desc": "A simple weather app built with React using Openweather API • Utilized Geolocation’s customer hook to instantly locate user • Became well-versed with Github branching",
      "image": "./images/weather.jpeg",
      "stack": "React | Axios | Github | Sass"
    }
  ]
}
